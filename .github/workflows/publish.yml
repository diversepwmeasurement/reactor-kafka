jobs:
  deployMilestone:
    environment: releases
    if: needs.prepare.outputs.versionType == 'MILESTONE'
    name: deployMilestone
    needs: prepare
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - continue-on-error: true
      uses: actions/setup-java@de1bb2b0c5634f0fc4438d7aa9944e68f9bf86cc
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_artifactory_publish_password: ${{secrets.ARTIFACTORY_PASSWORD}}
        ORG_GRADLE_PROJECT_artifactory_publish_username: ${{secrets.ARTIFACTORY_USERNAME}}
        ORG_GRADLE_PROJECT_signingKey: ${{secrets.SIGNING_KEY}}
        ORG_GRADLE_PROJECT_signingPassword: ${{secrets.SIGNING_PASSPHRASE}}
      name: deploy
      run: './gradlew assemble sign artifactoryPublish -Partifactory_publish_contextUrl=https://repo.spring.io
        -Partifactory_publish_repoKey=libs-milestone-local

        '
  deployRelease:
    environment: releases
    if: needs.prepare.outputs.versionType == 'RELEASE'
    name: deployRelease
    needs: prepare
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - continue-on-error: true
      uses: actions/setup-java@de1bb2b0c5634f0fc4438d7aa9944e68f9bf86cc
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_artifactory_publish_password: ${{secrets.ARTIFACTORY_PASSWORD}}
        ORG_GRADLE_PROJECT_artifactory_publish_username: ${{secrets.ARTIFACTORY_USERNAME}}
        ORG_GRADLE_PROJECT_signingKey: ${{secrets.SIGNING_KEY}}
        ORG_GRADLE_PROJECT_signingPassword: ${{secrets.SIGNING_PASSPHRASE}}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{secrets.SONATYPE_PASSWORD}}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{secrets.SONATYPE_USERNAME}}
      name: deploy
      run: './gradlew assemble sign artifactoryPublish -Partifactory_publish_contextUrl=https://repo.spring.io  -Partifactory_publish_repoKey=libs-release-local
        publishMavenJavaPublicationToSonatypeRepository

        '
  deploySnapshot:
    environment: snapshots
    if: needs.prepare.outputs.versionType == 'SNAPSHOT'
    name: deploySnapshot
    needs: prepare
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - continue-on-error: true
      uses: actions/setup-java@de1bb2b0c5634f0fc4438d7aa9944e68f9bf86cc
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_artifactory_publish_password: ${{secrets.ARTIFACTORY_PASSWORD}}
        ORG_GRADLE_PROJECT_artifactory_publish_username: ${{secrets.ARTIFACTORY_SNAPSHOT_USERNAME}}
      name: deploy
      run: './gradlew assemble artifactoryPublish -Partifactory_publish_contextUrl=https://repo.spring.io
        -Partifactory_publish_repoKey=libs-snapshot-local

        '
  prepare:
    name: prepare
    outputs:
      fullVersion: ${{ steps.version.outputs.fullVersion }}
      versionType: ${{ steps.version.outputs.versionType }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - continue-on-error: true
      name: setup java
      uses: actions/setup-java@de1bb2b0c5634f0fc4438d7aa9944e68f9bf86cc
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      id: version
      name: interpret version
      run: ./gradlew qualifyVersionGha
    - continue-on-error: true
      id: checks
      name: run checks
      run: ./gradlew check
    - continue-on-error: true
      if: failure() && steps.gradle.outcome == 'failure'
      name: Capture Test Results
      uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
      with:
        name: test-results
        path: 'build/reports/tests/**/*.*

          */build/reports/tests/**/*.*

          '
        retention-days: 3
  tagMilestone:
    name: Tag milestone
    needs:
    - prepare
    - deployMilestone
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - continue-on-error: true
      name: tag
      run: 'git config --local user.name ''reactorbot''

        git config --local user.email ''32325210+reactorbot@users.noreply.github.com''

        git tag -m "Release milestone ${{ needs.prepare.outputs.fullVersion }}" v${{
        needs.prepare.outputs.fullVersion }} ${{ github.sha }}

        git push --tags

        '
  tagRelease:
    name: Tag release
    needs:
    - prepare
    - deployRelease
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - continue-on-error: true
      name: tag
      run: 'git config --local user.name ''reactorbot''

        git config --local user.email ''32325210+reactorbot@users.noreply.github.com''

        git tag -m "Release version ${{ needs.prepare.outputs.fullVersion }}" v${{
        needs.prepare.outputs.fullVersion }} ${{ github.sha }}

        git push --tags

        '
name: publish
on:
  repository_dispatch:
    types: trigger-ga___publish.yml
permissions: read-all
